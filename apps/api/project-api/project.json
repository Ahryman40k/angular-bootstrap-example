{
  "name": "project-api",
  "$schema": "../../../node_modules/nx/schemas/project-schema.json",
  "sourceRoot": "apps/api/project-api/src",
  "projectType": "application",
  "targets": {
    "build": {
      "executor": "@nrwl/webpack:webpack",
      "outputs": ["{options.outputPath}"],
      "options": {
        "target": "node",
        "compiler": "tsc",
        "outputPath": "dist/apps/api/project-api",
        "main": "apps/api/project-api/src/main.ts",
        "tsConfig": "apps/api/project-api/tsconfig.app.json",
        "assets": ["apps/api/project-api/src/assets"],
        "webpackConfig": "apps/api/project-api/webpack.config.js",
        "generatePackageJson": true,
        "isolatedConfig": true,
        "babelUpwardRootMode": true
      },
      "configurations": {
        "production": {
          "optimization": true,
          "extractLicenses": true,
          "inspect": false
        }
      },
      "defaultConfiguration": "production"
    },
    "serve": {
      "executor": "@nrwl/js:node",
      "options": {
        "buildTarget": "project-api:build"
      },
      "configurations": {
        "production": {
          "buildTarget": "project-api:build:production"
        }
      }
    },
    "lint": {
      "executor": "@nrwl/linter:eslint",
      "outputs": ["{options.outputFile}"],
      "options": {
        "lintFilePatterns": ["apps/api/project-api/**/*.ts"]
      }
    },
    "test": {
      "executor": "@nrwl/jest:jest",
      "outputs": ["{workspaceRoot}/coverage/{projectRoot}"],
      "options": {
        "jestConfig": "apps/api/project-api/jest.config.ts",
        "passWithNoTests": true
      }
    },
    "docker": {
      "dependsOn": ["build"],
      "executor": "nx:run-commands",
      "options": {
        "command": "docker build -t project-api:latest -f ./apps/api/project-api/Dockerfile ."
      },
      "configurations": {
        "production": {
          "dependsOn": ["build:production"]
        }
      },
      "defaultConfiguration": "production"
    }
  },
  "tags": ["api"]
}
